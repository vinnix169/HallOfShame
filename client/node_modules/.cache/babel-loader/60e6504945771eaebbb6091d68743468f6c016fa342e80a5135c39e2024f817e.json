{"ast":null,"code":"import { Navigate, useParams, useNavigate, Link } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nconst PostDetail = () => {\n  /*const { id } = useParams();\r\n  const { data, pending, error } = useFetch(\r\n    \"http://localhost:8000/post/get/\" + id\r\n  );\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n  const [displayDate, setDisplayedDate] = useState(\"\");\r\n  const [displayLikes, setDisplayedLike] = useState(0);\r\n  const navigateDeleted = useNavigate();\r\n    const convertDate = () => {\r\n    const originalDate = new Date(data.date);\r\n      const formattedDate = `${originalDate.getFullYear()}.${originalDate.getMonth() + 1\r\n      }.${originalDate.getDate()} ${originalDate.getHours()}:${(originalDate.getMinutes() < 10 ? \"0\" : \"\") + originalDate.getMinutes()\r\n      }`;\r\n    console.log(originalDate);\r\n    setDisplayedDate(formattedDate);\r\n      //set date for sortedData here\r\n  };\r\n    const handleDelete = () => {\r\n    fetch(\"http://localhost:8000/post/delete/\" + id, {\r\n      method: \"DELETE\",\r\n    })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          console.log(\"Post deleted successfully\");\r\n          // Handle any additional logic after successful deletion\r\n        } else {\r\n          console.error(\"Failed to delete post\");\r\n        }\r\n      })\r\n      .catch((err) => console.error(err));\r\n    navigateDeleted(\"/deleted\");\r\n  };\r\n    const handleLike = () => {\r\n    const formData = new FormData();\r\n    formData.append(\"likes\", data.likes + 1);\r\n    setDisplayedLike(data.likes + 1);\r\n      fetch(\"http://localhost:8000/post/updateLikes/\" + id, {\r\n      method: \"PUT\",\r\n      body: formData,\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => { })\r\n      .catch((err) => console.error(err));\r\n  };\r\n    useEffect(() => {\r\n    if (data != null) {\r\n      convertDate();\r\n      setDisplayedLike((prev) => data.likes);\r\n      const formData = new FormData();\r\n      formData.append(\"views\", data.views + 1);\r\n        fetch(\"http://localhost:8000/post/updateViews/\" + id, {\r\n        method: \"PUT\",\r\n        body: formData,\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => { })\r\n        .catch((err) => console.error(err));\r\n    }\r\n  }, [data]);\r\n    if (data) {\r\n    console.log(data);\r\n  }\r\n    return (\r\n    <main>\r\n      {pending && <div>Loading...</div>}\r\n      {data && (\r\n        <div className=\"detail-container\">\r\n          <div\r\n            className=\"detail-image\"\r\n            style={{\r\n              backgroundImage: `url(\"http://localhost:8000/uploads/${data.image}\")`,\r\n            }}\r\n          ></div>\r\n          <div className=\"detail-desc\">\r\n            <h3>{data.title}</h3>\r\n            <div className=\"description-box\">\r\n              <h4>Description:</h4>\r\n              <div>{data.description}</div>\r\n            </div>\r\n            <div className=\"detail-likes\">\r\n              <div className=\"like-container\">\r\n                <div>Likes: {displayLikes}</div>\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"\"\r\n                  className=\"like\"\r\n                  onClick={handleLike}\r\n                />\r\n              </div>\r\n                <div>Views: {data.views}</div>\r\n            </div>\r\n            <div>Added: {displayDate}</div>\r\n            <h6 className=\"tags-title\">Tags:</h6>\r\n            <div className=\"tags\">\r\n                {data &&\r\n                data.tags.map((item, index) =>\r\n                  <Link to={`/tags/${item}`}><div key={index}>{item}</div></Link>)}\r\n            </div>\r\n          </div>\r\n          <div className=\"detail-delete-container\">\r\n            <input type=\"button\" value=\"Delete\" onClick={handleDelete} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </main>\r\n  );*/\n};\n_c = PostDetail;\nexport default PostDetail;\nvar _c;\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"names":["Navigate","useParams","useNavigate","Link","useEffect","useState","PostDetail","_c","$RefreshReg$"],"sources":["D:/Studio/Programming/HallOfShame/client/src/posts/PostDetail.jsx"],"sourcesContent":["import { Navigate, useParams, useNavigate, Link } from \"react-router-dom\";\r\n\r\n\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst PostDetail = () => {\r\n  /*const { id } = useParams();\r\n  const { data, pending, error } = useFetch(\r\n    \"http://localhost:8000/post/get/\" + id\r\n  );\r\n\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [displayDate, setDisplayedDate] = useState(\"\");\r\n  const [displayLikes, setDisplayedLike] = useState(0);\r\n  const navigateDeleted = useNavigate();\r\n\r\n  const convertDate = () => {\r\n    const originalDate = new Date(data.date);\r\n\r\n    const formattedDate = `${originalDate.getFullYear()}.${originalDate.getMonth() + 1\r\n      }.${originalDate.getDate()} ${originalDate.getHours()}:${(originalDate.getMinutes() < 10 ? \"0\" : \"\") + originalDate.getMinutes()\r\n      }`;\r\n    console.log(originalDate);\r\n    setDisplayedDate(formattedDate);\r\n\r\n    //set date for sortedData here\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    fetch(\"http://localhost:8000/post/delete/\" + id, {\r\n      method: \"DELETE\",\r\n    })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          console.log(\"Post deleted successfully\");\r\n          // Handle any additional logic after successful deletion\r\n        } else {\r\n          console.error(\"Failed to delete post\");\r\n        }\r\n      })\r\n      .catch((err) => console.error(err));\r\n    navigateDeleted(\"/deleted\");\r\n  };\r\n\r\n  const handleLike = () => {\r\n    const formData = new FormData();\r\n    formData.append(\"likes\", data.likes + 1);\r\n    setDisplayedLike(data.likes + 1);\r\n\r\n    fetch(\"http://localhost:8000/post/updateLikes/\" + id, {\r\n      method: \"PUT\",\r\n      body: formData,\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => { })\r\n      .catch((err) => console.error(err));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data != null) {\r\n      convertDate();\r\n      setDisplayedLike((prev) => data.likes);\r\n      const formData = new FormData();\r\n      formData.append(\"views\", data.views + 1);\r\n\r\n      fetch(\"http://localhost:8000/post/updateViews/\" + id, {\r\n        method: \"PUT\",\r\n        body: formData,\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => { })\r\n        .catch((err) => console.error(err));\r\n    }\r\n  }, [data]);\r\n\r\n  if (data) {\r\n    console.log(data);\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      {pending && <div>Loading...</div>}\r\n      {data && (\r\n        <div className=\"detail-container\">\r\n          <div\r\n            className=\"detail-image\"\r\n            style={{\r\n              backgroundImage: `url(\"http://localhost:8000/uploads/${data.image}\")`,\r\n            }}\r\n          ></div>\r\n          <div className=\"detail-desc\">\r\n            <h3>{data.title}</h3>\r\n            <div className=\"description-box\">\r\n              <h4>Description:</h4>\r\n              <div>{data.description}</div>\r\n            </div>\r\n            <div className=\"detail-likes\">\r\n              <div className=\"like-container\">\r\n                <div>Likes: {displayLikes}</div>\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"\"\r\n                  className=\"like\"\r\n                  onClick={handleLike}\r\n                />\r\n              </div>\r\n\r\n              <div>Views: {data.views}</div>\r\n            </div>\r\n            <div>Added: {displayDate}</div>\r\n            <h6 className=\"tags-title\">Tags:</h6>\r\n            <div className=\"tags\">\r\n\r\n              {data &&\r\n                data.tags.map((item, index) =>\r\n                  <Link to={`/tags/${item}`}><div key={index}>{item}</div></Link>)}\r\n            </div>\r\n          </div>\r\n          <div className=\"detail-delete-container\">\r\n            <input type=\"button\" value=\"Delete\" onClick={handleDelete} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </main>\r\n  );*/\r\n};\r\n\r\nexport default PostDetail;\r\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,WAAW,EAAEC,IAAI,QAAQ,kBAAkB;AAGzE,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EACvzGE,CAuHD;AAACC,EAAA,GAxHID,UAAU;AA0HhB,eAAeA,UAAU;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}