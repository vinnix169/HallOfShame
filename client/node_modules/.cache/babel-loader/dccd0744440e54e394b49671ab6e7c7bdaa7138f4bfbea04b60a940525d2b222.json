{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HomePC\\\\Desktop\\\\Codes\\\\HallOfShame\\\\client\\\\src\\\\Main.js\",\n  _s2 = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport ReactPaginate from \"react-paginate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  let initArray = {\n    items: []\n  };\n  const [data, setData] = useState(initArray);\n  const CreateData = () => {\n    for (let i = 1; i < 51; i++) {\n      let item = {\n        imagePath: `https://picsum.photos/1000/1000?random=${i}`,\n        views: Math.floor(Math.random() * 1000),\n        likes: Math.floor(Math.random() * 100),\n        name: `Picture of number ${i}`,\n        date: \"YYYY-MM-DD hh:mm\"\n      };\n      initArray.items.push(item);\n      console.log(initArray);\n    }\n    setData(oldData => ({\n      ...oldData,\n      ...initArray\n    }));\n  };\n  function Items({\n    currentItems\n  }) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: currentItems && currentItems.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Item #\", item]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this))\n    }, void 0, false);\n  }\n  function PaginatedItems({\n    itemsPerPage\n  }) {\n    _s();\n    // Here we use item offsets; we could also use page offsets\n    // following the API or data you're working with.\n    const [itemOffset, setItemOffset] = useState(0);\n\n    // Simulate fetching items from another resources.\n    // (This could be items from props; or items loaded in a local state\n    // from an API endpoint with useEffect and useState)\n    const endOffset = itemOffset + itemsPerPage;\n    console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n    const currentItems = items.slice(itemOffset, endOffset);\n    const pageCount = Math.ceil(items.length / itemsPerPage);\n\n    // Invoke when user click to request another page.\n    const handlePageClick = event => {\n      const newOffset = event.selected * itemsPerPage % items.length;\n      console.log(`User requested page number ${event.selected}, which is offset ${newOffset}`);\n      setItemOffset(newOffset);\n    };\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Items, {\n        currentItems: currentItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n        breakLabel: \"...\",\n        nextLabel: \"next >\",\n        onPageChange: handlePageClick,\n        pageRangeDisplayed: 5,\n        pageCount: pageCount,\n        previousLabel: \"< previous\",\n        renderOnZeroPageCount: null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n  _s(PaginatedItems, \"T5lRYnT7FeIRYhFW34vLrQET4eA=\");\n  useEffect(() => {\n    return () => {\n      CreateData();\n    };\n  }, []);\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-pagination\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-pag-item\",\n              children: \"Option1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-pag-item\",\n              children: \"Option2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-pag-item\",\n              children: \"Option3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-grid\",\n            children: data.items.map(element => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-grid-element\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"result-element-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"result-img\",\n                  style: {\n                    backgroundImage: `url(\"${element.imagePath}\")`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"result-text\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"result-title\",\n                    children: element.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"result-analitics-container\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [\"Likes: \", element.likes]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 105,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [\"Added: \", element.date]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 106,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 19\n              }, this)\n            }, element.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s2(Main, \"inQWtbv6rkwVMKPbo+mRNZ1IeXg=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["useEffect","useState","ReactPaginate","jsxDEV","_jsxDEV","Fragment","_Fragment","Main","_s2","_s","$RefreshSig$","initArray","items","data","setData","CreateData","i","item","imagePath","views","Math","floor","random","likes","name","date","push","console","log","oldData","Items","currentItems","children","map","fileName","_jsxFileName","lineNumber","columnNumber","PaginatedItems","itemsPerPage","itemOffset","setItemOffset","endOffset","slice","pageCount","ceil","length","handlePageClick","event","newOffset","selected","breakLabel","nextLabel","onPageChange","pageRangeDisplayed","previousLabel","renderOnZeroPageCount","className","element","style","backgroundImage","_c","$RefreshReg$"],"sources":["C:/Users/HomePC/Desktop/Codes/HallOfShame/client/src/Main.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nconst Main = () => {\r\n  let initArray = { items: [] };\r\n  const [data, setData] = useState(initArray);\r\n\r\n  const CreateData = () => {\r\n    for (let i = 1; i < 51; i++) {\r\n      let item = {\r\n        imagePath: `https://picsum.photos/1000/1000?random=${i}`,\r\n        views: Math.floor(Math.random() * 1000),\r\n        likes: Math.floor(Math.random() * 100),\r\n        name: `Picture of number ${i}`,\r\n        date: \"YYYY-MM-DD hh:mm\",\r\n      };\r\n\r\n      initArray.items.push(item);\r\n      console.log(initArray);\r\n    }\r\n    setData((oldData) => ({ ...oldData, ...initArray }));\r\n  };\r\n\r\n  function Items({ currentItems }) {\r\n    return (\r\n      <>\r\n        {currentItems &&\r\n          currentItems.map((item) => (\r\n            <div>\r\n              <h3>Item #{item}</h3>\r\n            </div>\r\n          ))}\r\n      </>\r\n    );\r\n  }\r\n\r\n  function PaginatedItems({ itemsPerPage }) {\r\n    // Here we use item offsets; we could also use page offsets\r\n    // following the API or data you're working with.\r\n    const [itemOffset, setItemOffset] = useState(0);\r\n\r\n    // Simulate fetching items from another resources.\r\n    // (This could be items from props; or items loaded in a local state\r\n    // from an API endpoint with useEffect and useState)\r\n    const endOffset = itemOffset + itemsPerPage;\r\n    console.log(`Loading items from ${itemOffset} to ${endOffset}`);\r\n    const currentItems = items.slice(itemOffset, endOffset);\r\n    const pageCount = Math.ceil(items.length / itemsPerPage);\r\n\r\n    // Invoke when user click to request another page.\r\n    const handlePageClick = (event) => {\r\n      const newOffset = (event.selected * itemsPerPage) % items.length;\r\n      console.log(\r\n        `User requested page number ${event.selected}, which is offset ${newOffset}`\r\n      );\r\n      setItemOffset(newOffset);\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Items currentItems={currentItems} />\r\n        <ReactPaginate\r\n          breakLabel=\"...\"\r\n          nextLabel=\"next >\"\r\n          onPageChange={handlePageClick}\r\n          pageRangeDisplayed={5}\r\n          pageCount={pageCount}\r\n          previousLabel=\"< previous\"\r\n          renderOnZeroPageCount={null}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      CreateData();\r\n    };\r\n  }, []);\r\n  console.log(data);\r\n\r\n  return (\r\n    <>\r\n      <main>\r\n        <div className=\"main-container\">\r\n          <div className=\"result-container\">\r\n            <div className=\"result-pagination\">\r\n              <div className=\"result-pag-item\">Option1</div>\r\n              <div className=\"result-pag-item\">Option2</div>\r\n              <div className=\"result-pag-item\">Option3</div>\r\n            </div>\r\n            <div className=\"result-grid\">\r\n              {data.items.map((element) => (\r\n                <div key={element.name} className=\"result-grid-element\">\r\n                  <div className=\"result-element-container\">\r\n                    <div\r\n                      className=\"result-img\"\r\n                      style={{\r\n                        backgroundImage: `url(\"${element.imagePath}\")`,\r\n                      }}\r\n                    ></div>\r\n                    <div className=\"result-text\">\r\n                      <div className=\"result-title\">{element.name}</div>\r\n                      <div className=\"result-analitics-container\">\r\n                        <div>Likes: {element.likes}</div>\r\n                        <div>Added: {element.date}</div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}