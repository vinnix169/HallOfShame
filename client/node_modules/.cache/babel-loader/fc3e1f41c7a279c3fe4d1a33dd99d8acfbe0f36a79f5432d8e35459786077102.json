{"ast":null,"code":"var _jsxFileName = \"D:\\\\Studio\\\\Programming\\\\HallOfShame\\\\client\\\\src\\\\Main.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport ReactPaginate from \"react-paginate\";\nimport SmoothScroll from \"smooth-scroll\";\nimport UseScroll from \"./UseScroll\";\nimport useFetch from \"./useFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  //init variables\n  const itemsPerPage = 16;\n  const [loading, setLoading] = useState(true);\n  const [data] = useFetch(\"https://localhost:8000/items\");\n  const [currentPage, setCurrentPage] = useState(0);\n  const indexOfLastItem = (currentPage + 1) * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n\n  //handles the pagination to set the current elements depending on the page number\n  const handlePageClick = selectedPage => {\n    setCurrentPage(selectedPage.selected);\n    UseScroll('#root', '#pagination', 1000, 'easeOutQuart');\n  };\n  const sortItem = e => {\n    let sort = \"\";\n    if (e === undefined) {\n      sort = \"Likes\";\n    } else {\n      sort = e.target.value;\n    }\n    switch (sort) {\n      case \"Likes\":\n        {\n          setData(oldData => ([...oldData], [...data].sort((a, b) => b.likes - a.likes)));\n          break;\n        }\n      case \"Views\":\n        {\n          setData(oldData => ([...oldData], [...data].sort((a, b) => b.views - a.views)));\n          break;\n        }\n    }\n  };\n  useEffect(() => {\n    sortItem();\n  }, [loading]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Main, \"EO5a4J8rbl8PAe/e4RWGUkIBVTU=\", false, function () {\n  return [useFetch];\n});\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["useEffect","useState","ReactPaginate","SmoothScroll","UseScroll","useFetch","jsxDEV","_jsxDEV","Fragment","_Fragment","Main","_s","itemsPerPage","loading","setLoading","data","currentPage","setCurrentPage","indexOfLastItem","indexOfFirstItem","handlePageClick","selectedPage","selected","sortItem","e","sort","undefined","target","value","setData","oldData","a","b","likes","views","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Studio/Programming/HallOfShame/client/src/Main.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport SmoothScroll from \"smooth-scroll\"\r\nimport UseScroll from \"./UseScroll\";\r\nimport useFetch from \"./useFetch\";\r\n\r\n\r\nconst Main = () => {\r\n  //init variables\r\n  const itemsPerPage = 16;\r\n  const [loading, setLoading] = useState(true);\r\n  const [data] = useFetch(\"https://localhost:8000/items\")\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const indexOfLastItem = (currentPage + 1) * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n\r\n//handles the pagination to set the current elements depending on the page number\r\n  const handlePageClick = (selectedPage) => {\r\n    setCurrentPage(selectedPage.selected);\r\n    UseScroll('#root','#pagination', 1000, 'easeOutQuart')\r\n  };\r\n\r\n\r\n  const sortItem = (e) => {\r\n    let sort = \"\"\r\n    if(e === undefined) {\r\n      sort = \"Likes\";\r\n    } else {\r\n      sort = e.target.value\r\n    }\r\n    \r\n    switch(sort){\r\n      case \"Likes\": {\r\n        setData((oldData) => ([...oldData], [...data].sort((a,b) => b.likes - a.likes)))\r\n        break;\r\n      }\r\n      case \"Views\": {\r\n        setData((oldData) => ([...oldData], [...data].sort((a,b) => b.views - a.views)))\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    sortItem()\r\n  },[loading])\r\n\r\n  \r\n  return (\r\n    <>\r\n\r\n      <main>\r\n        \r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,aAAa,MAAM,gBAAgB;AAC1C,OAAOC,YAAY,MAAM,eAAe;AACxC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGlC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB;EACA,MAAMC,YAAY,GAAG,EAAE;EACvB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACc,IAAI,CAAC,GAAGV,QAAQ,CAAC,8BAA8B,CAAC;EACvD,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAMiB,eAAe,GAAG,CAACF,WAAW,GAAG,CAAC,IAAIJ,YAAY;EACxD,MAAMO,gBAAgB,GAAGD,eAAe,GAAGN,YAAY;;EAEzD;EACE,MAAMQ,eAAe,GAAIC,YAAY,IAAK;IACxCJ,cAAc,CAACI,YAAY,CAACC,QAAQ,CAAC;IACrClB,SAAS,CAAC,OAAO,EAAC,aAAa,EAAE,IAAI,EAAE,cAAc,CAAC;EACxD,CAAC;EAGD,MAAMmB,QAAQ,GAAIC,CAAC,IAAK;IACtB,IAAIC,IAAI,GAAG,EAAE;IACb,IAAGD,CAAC,KAAKE,SAAS,EAAE;MAClBD,IAAI,GAAG,OAAO;IAChB,CAAC,MAAM;MACLA,IAAI,GAAGD,CAAC,CAACG,MAAM,CAACC,KAAK;IACvB;IAEA,QAAOH,IAAI;MACT,KAAK,OAAO;QAAE;UACZI,OAAO,CAAEC,OAAO,KAAM,CAAC,GAAGA,OAAO,CAAC,EAAE,CAAC,GAAGf,IAAI,CAAC,CAACU,IAAI,CAAC,CAACM,CAAC,EAACC,CAAC,KAAKA,CAAC,CAACC,KAAK,GAAGF,CAAC,CAACE,KAAK,CAAC,CAAC,CAAC;UAChF;QACF;MACA,KAAK,OAAO;QAAE;UACZJ,OAAO,CAAEC,OAAO,KAAM,CAAC,GAAGA,OAAO,CAAC,EAAE,CAAC,GAAGf,IAAI,CAAC,CAACU,IAAI,CAAC,CAACM,CAAC,EAACC,CAAC,KAAKA,CAAC,CAACE,KAAK,GAAGH,CAAC,CAACG,KAAK,CAAC,CAAC,CAAC;UAChF;QACF;IACF;EACF,CAAC;EAGDlC,SAAS,CAAC,MAAM;IACduB,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAC,CAACV,OAAO,CAAC,CAAC;EAGZ,oBACEN,OAAA,CAAAE,SAAA;IAAA0B,QAAA,eAEE5B,OAAA;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEM;EAAC,gBACP,CAAC;AAEP,CAAC;AAAC5B,EAAA,CAlDID,IAAI;EAAA,QAIOL,QAAQ;AAAA;AAAAmC,EAAA,GAJnB9B,IAAI;AAoDV,eAAeA,IAAI;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}