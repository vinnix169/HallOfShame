{"ast":null,"code":"var _jsxFileName = \"D:\\\\Studio\\\\Programming\\\\HallOfShame\\\\client\\\\src\\\\PostList.jsx\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PostList = data => {\n  _s();\n  const itemsPerPage = 16;\n  const [currentPage, setCurrentPage] = useState(0);\n  const indexOfLastItem = (currentPage + 1) * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n\n  //handles the pagination to set the current elements depending on the page number\n  const handlePageClick = selectedPage => {\n    setCurrentPage(selectedPage.selected);\n    UseScroll('#root', '#pagination', 1000, 'easeOutQuint');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-grid\",\n      children: data.slice(indexOfFirstItem, indexOfLastItem).map((element, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-grid-element\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-element-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-img\",\n            style: {\n              backgroundImage: `url(\"${element.imagePath}\")`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-title\",\n              children: element.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: [\"Views: \", element.views]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-analitics-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Likes: \", element.likes]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Added: \", element.date]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(PostList, \"kF5zyetxw6M8BnbNC3J8pG5ccpI=\");\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["PostList","data","_s","itemsPerPage","currentPage","setCurrentPage","useState","indexOfLastItem","indexOfFirstItem","handlePageClick","selectedPage","selected","UseScroll","_jsxDEV","_Fragment","children","className","slice","map","element","index","style","backgroundImage","imagePath","fileName","_jsxFileName","lineNumber","columnNumber","name","views","likes","date","_c","$RefreshReg$"],"sources":["D:/Studio/Programming/HallOfShame/client/src/PostList.jsx"],"sourcesContent":["const PostList = (data) => {\r\n    const itemsPerPage = 16;\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    const indexOfLastItem = (currentPage + 1) * itemsPerPage;\r\n    const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n\r\n    //handles the pagination to set the current elements depending on the page number\r\n    const handlePageClick = (selectedPage) => {\r\n        setCurrentPage(selectedPage.selected);\r\n        UseScroll('#root', '#pagination', 1000, 'easeOutQuint')\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"result-grid\">\r\n                {data.slice(indexOfFirstItem, indexOfLastItem).map((element, index) => (\r\n                    <div key={index} className=\"result-grid-element\">\r\n                        <div className=\"result-element-container\">\r\n                            <div\r\n                                className=\"result-img\"\r\n                                style={{\r\n                                    backgroundImage: `url(\"${element.imagePath}\")`,\r\n                                }}\r\n                            ></div>\r\n                            <div className=\"result-text\">\r\n                                <div className=\"result-title\">{element.name}</div>\r\n                                <h6>Views: {element.views}</h6>\r\n                                <div className=\"result-analitics-container\">\r\n                                    <div>Likes: {element.likes}</div>\r\n                                    <div>Added: {element.date}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PostList;"],"mappings":";;;;AAAA,MAAMA,QAAQ,GAAIC,IAAI,IAAK;EAAAC,EAAA;EACvB,MAAMC,YAAY,GAAG,EAAE;EACvB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGC,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAMC,eAAe,GAAG,CAACH,WAAW,GAAG,CAAC,IAAID,YAAY;EACxD,MAAMK,gBAAgB,GAAGD,eAAe,GAAGJ,YAAY;;EAEvD;EACA,MAAMM,eAAe,GAAIC,YAAY,IAAK;IACtCL,cAAc,CAACK,YAAY,CAACC,QAAQ,CAAC;IACrCC,SAAS,CAAC,OAAO,EAAE,aAAa,EAAE,IAAI,EAAE,cAAc,CAAC;EAC3D,CAAC;EAGD,oBACIC,OAAA,CAAAC,SAAA;IAAAC,QAAA,eACIF,OAAA;MAAKG,SAAS,EAAC,aAAa;MAAAD,QAAA,EACvBd,IAAI,CAACgB,KAAK,CAACT,gBAAgB,EAAED,eAAe,CAAC,CAACW,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC9DP,OAAA;QAAiBG,SAAS,EAAC,qBAAqB;QAAAD,QAAA,eAC5CF,OAAA;UAAKG,SAAS,EAAC,0BAA0B;UAAAD,QAAA,gBACrCF,OAAA;YACIG,SAAS,EAAC,YAAY;YACtBK,KAAK,EAAE;cACHC,eAAe,EAAG,QAAOH,OAAO,CAACI,SAAU;YAC/C;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACPd,OAAA;YAAKG,SAAS,EAAC,aAAa;YAAAD,QAAA,gBACxBF,OAAA;cAAKG,SAAS,EAAC,cAAc;cAAAD,QAAA,EAAEI,OAAO,CAACS;YAAI;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAClDd,OAAA;cAAAE,QAAA,GAAI,SAAO,EAACI,OAAO,CAACU,KAAK;YAAA;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC/Bd,OAAA;cAAKG,SAAS,EAAC,4BAA4B;cAAAD,QAAA,gBACvCF,OAAA;gBAAAE,QAAA,GAAK,SAAO,EAACI,OAAO,CAACW,KAAK;cAAA;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACjCd,OAAA;gBAAAE,QAAA,GAAK,SAAO,EAACI,OAAO,CAACY,IAAI;cAAA;gBAAAP,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/B,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MAAC,GAhBAP,KAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAiBV,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC,gBAER,CAAC;AAEX,CAAC;AAAAzB,EAAA,CAxCKF,QAAQ;AAAAgC,EAAA,GAARhC,QAAQ;AA0Cd,eAAeA,QAAQ;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}