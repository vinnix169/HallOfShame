{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HomePC\\\\Desktop\\\\Codes\\\\HallOfShame\\\\client\\\\src\\\\Paginate.js\";\nimport ReactPaginate from \"react-paginate\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Paginate = ({\n  items\n}) => {\n  var _s = $RefreshSig$();\n  function Items({\n    currentItems\n  }) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"items\",\n      children: currentItems && currentItems.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Item #\", item]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this);\n  }\n  function PaginatedItems({\n    itemsPerPage\n  }) {\n    _s();\n    // We start with an empty list of items.\n    const [currentItems, setCurrentItems] = useState(null);\n    const [pageCount, setPageCount] = useState(0);\n    // Here we use item offsets; we could also use page offsets\n    // following the API or data you're working with.\n    const [itemOffset, setItemOffset] = useState(0);\n    useEffect(() => {\n      // Fetch items from another resources.\n      const endOffset = itemOffset + itemsPerPage;\n      console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n      setCurrentItems(items.slice(itemOffset, endOffset));\n      setPageCount(Math.ceil(items.length / itemsPerPage));\n    }, [itemOffset, itemsPerPage]);\n\n    // Invoke when user click to request another page.\n    const handlePageClick = event => {\n      const newOffset = event.selected * itemsPerPage % items.length;\n      console.log(`User requested page number ${event.selected}, which is offset ${newOffset}`);\n      setItemOffset(newOffset);\n    };\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Items, {\n        currentItems: currentItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n        nextLabel: \"next >\",\n        onPageChange: handlePageClick,\n        pageRangeDisplayed: 3,\n        marginPagesDisplayed: 2,\n        pageCount: pageCount,\n        previousLabel: \"< previous\",\n        pageClassName: \"page-item\",\n        pageLinkClassName: \"page-link\",\n        previousClassName: \"page-item\",\n        previousLinkClassName: \"page-link\",\n        nextClassName: \"page-item\",\n        nextLinkClassName: \"page-link\",\n        breakLabel: \"...\",\n        breakClassName: \"page-item\",\n        breakLinkClassName: \"page-link\",\n        containerClassName: \"pagination\",\n        activeClassName: \"active\",\n        renderOnZeroPageCount: null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n  _s(PaginatedItems, \"HTeX8cSP+G2jiDQZoJcFFLxPhRM=\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(PaginatedItems, {\n      itemsPerPage: 4\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = Paginate;\nexport default Paginate;\nvar _c;\n$RefreshReg$(_c, \"Paginate\");","map":{"version":3,"names":["ReactPaginate","React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Paginate","items","_s","$RefreshSig$","Items","currentItems","className","children","map","item","fileName","_jsxFileName","lineNumber","columnNumber","PaginatedItems","itemsPerPage","setCurrentItems","pageCount","setPageCount","itemOffset","setItemOffset","endOffset","console","log","slice","Math","ceil","length","handlePageClick","event","newOffset","selected","nextLabel","onPageChange","pageRangeDisplayed","marginPagesDisplayed","previousLabel","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakLabel","breakClassName","breakLinkClassName","containerClassName","activeClassName","renderOnZeroPageCount","_c","$RefreshReg$"],"sources":["C:/Users/HomePC/Desktop/Codes/HallOfShame/client/src/Paginate.js"],"sourcesContent":["import ReactPaginate from \"react-paginate\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst Paginate = ({ items }) => {\r\n  function Items({ currentItems }) {\r\n    return (\r\n      <div className=\"items\">\r\n        {currentItems &&\r\n          currentItems.map((item) => (\r\n            <div>\r\n              <h3>Item #{item}</h3>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function PaginatedItems({ itemsPerPage }) {\r\n    // We start with an empty list of items.\r\n    const [currentItems, setCurrentItems] = useState(null);\r\n    const [pageCount, setPageCount] = useState(0);\r\n    // Here we use item offsets; we could also use page offsets\r\n    // following the API or data you're working with.\r\n    const [itemOffset, setItemOffset] = useState(0);\r\n\r\n    useEffect(() => {\r\n      // Fetch items from another resources.\r\n      const endOffset = itemOffset + itemsPerPage;\r\n      console.log(`Loading items from ${itemOffset} to ${endOffset}`);\r\n      setCurrentItems(items.slice(itemOffset, endOffset));\r\n      setPageCount(Math.ceil(items.length / itemsPerPage));\r\n    }, [itemOffset, itemsPerPage]);\r\n\r\n    // Invoke when user click to request another page.\r\n    const handlePageClick = (event) => {\r\n      const newOffset = (event.selected * itemsPerPage) % items.length;\r\n      console.log(\r\n        `User requested page number ${event.selected}, which is offset ${newOffset}`\r\n      );\r\n      setItemOffset(newOffset);\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Items currentItems={currentItems} />\r\n        <ReactPaginate\r\n          nextLabel=\"next >\"\r\n          onPageChange={handlePageClick}\r\n          pageRangeDisplayed={3}\r\n          marginPagesDisplayed={2}\r\n          pageCount={pageCount}\r\n          previousLabel=\"< previous\"\r\n          pageClassName=\"page-item\"\r\n          pageLinkClassName=\"page-link\"\r\n          previousClassName=\"page-item\"\r\n          previousLinkClassName=\"page-link\"\r\n          nextClassName=\"page-item\"\r\n          nextLinkClassName=\"page-link\"\r\n          breakLabel=\"...\"\r\n          breakClassName=\"page-item\"\r\n          breakLinkClassName=\"page-link\"\r\n          containerClassName=\"pagination\"\r\n          activeClassName=\"active\"\r\n          renderOnZeroPageCount={null}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PaginatedItems itemsPerPage={4} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Paginate;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}