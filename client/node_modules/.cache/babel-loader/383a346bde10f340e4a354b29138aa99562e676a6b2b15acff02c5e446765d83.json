{"ast":null,"code":"var _jsxFileName = \"D:\\\\Studio\\\\Programming\\\\HallOfShame\\\\client\\\\src\\\\Main.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport ReactPaginate from \"react-paginate\";\nimport SmoothScroll from \"smooth-scroll\";\nimport UseScroll from \"./UseScroll\";\nimport \"./Main.css\";\nimport useFetch from \"./useFetch\";\nimport PostList from \"./PostList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Main = data => {\n  _s();\n  //init variables\n\n  const itemsPerPage = 16;\n  const [currentPage, setCurrentPage] = useState(0);\n  const indexOfLastItem = (currentPage + 1) * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n\n  //handles the pagination to set the current elements depending on the page number\n  const handlePageClick = selectedPage => {\n    setCurrentPage(selectedPage.selected);\n    UseScroll('#root', '#pagination', 1000, 'easeOutQuint');\n  };\n\n  /*const sortItem = (e) => {\r\n    let sort = \"\"\r\n    if(e === undefined) {\r\n      sort = \"Likes\";\r\n    } else {\r\n      sort = e.target.value\r\n    }\r\n    \r\n    switch(sort){\r\n      case \"Likes\": {\r\n        setData((oldData) => ([...oldData], [...data].sort((a,b) => b.likes - a.likes)))\r\n        break;\r\n      }\r\n      case \"Views\": {\r\n        setData((oldData) => ([...oldData], [...data].sort((a,b) => b.views - a.views)))\r\n        break;\r\n      }\r\n    }\r\n  };\r\n    useEffect(() => {\r\n    sortItem()\r\n  },[loading])\r\n  */\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-pagination\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sort-element\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                defaultValue: \"AlphabeticAsc\",\n                name: \"sorting\",\n                id: \"sorting\",\n                onChange: /*sortItem*/\"\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Likes\",\n                  children: \"Most Liked\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Views\",\n                  children: \"Most Viewed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"New\",\n                  children: \"Recent (wip)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Oldest\",\n                  children: \"Oldest (wip)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PostList, {\n            posts: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Main, \"kF5zyetxw6M8BnbNC3J8pG5ccpI=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["useEffect","useState","ReactPaginate","SmoothScroll","UseScroll","useFetch","PostList","jsxDEV","_jsxDEV","Fragment","_Fragment","Main","data","_s","itemsPerPage","currentPage","setCurrentPage","indexOfLastItem","indexOfFirstItem","handlePageClick","selectedPage","selected","console","log","children","className","defaultValue","name","id","onChange","value","fileName","_jsxFileName","lineNumber","columnNumber","posts","_c","$RefreshReg$"],"sources":["D:/Studio/Programming/HallOfShame/client/src/Main.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport SmoothScroll from \"smooth-scroll\"\r\nimport UseScroll from \"./UseScroll\";\r\nimport \"./Main.css\";\r\nimport useFetch from \"./useFetch\";\r\nimport PostList from \"./PostList\";\r\n\r\n\r\nconst Main = (data) => {\r\n  //init variables\r\n  \r\n  const itemsPerPage = 16;\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const indexOfLastItem = (currentPage + 1) * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n\r\n//handles the pagination to set the current elements depending on the page number\r\n  const handlePageClick = (selectedPage) => {\r\n    setCurrentPage(selectedPage.selected);\r\n    UseScroll('#root','#pagination', 1000, 'easeOutQuint')\r\n  };\r\n\r\n\r\n  /*const sortItem = (e) => {\r\n    let sort = \"\"\r\n    if(e === undefined) {\r\n      sort = \"Likes\";\r\n    } else {\r\n      sort = e.target.value\r\n    }\r\n    \r\n    switch(sort){\r\n      case \"Likes\": {\r\n        setData((oldData) => ([...oldData], [...data].sort((a,b) => b.likes - a.likes)))\r\n        break;\r\n      }\r\n      case \"Views\": {\r\n        setData((oldData) => ([...oldData], [...data].sort((a,b) => b.views - a.views)))\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    sortItem()\r\n  },[loading])\r\n*/\r\n  console.log(data)\r\n  return (\r\n    <>\r\n\r\n      <main>\r\n        <div className=\"main-container\">\r\n          <div className=\"result-container\">\r\n            <div className=\"result-pagination\">\r\n              <div className=\"sort-element\">\r\n                <select defaultValue=\"AlphabeticAsc\" name=\"sorting\" id=\"sorting\" onChange={/*sortItem*/\"\"}>\r\n                  <option value=\"Likes\">Most Liked</option>\r\n                  <option value=\"Views\">Most Viewed</option>\r\n                  <option value=\"New\">Recent (wip)</option>\r\n                  <option value=\"Oldest\">Oldest (wip)</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <PostList posts={data}/>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}